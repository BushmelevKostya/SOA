openapi: 3.0.3
info:
  title: City Collection API
  description: API для управления коллекцией объектов City
  version: 1.0.0

servers:
  - url: http://localhost:5736/api/v1

tags:
  - name: cities
    description: Операции с коллекцией City
  - name: utils
    description: Специальные операции

paths:
  /cities:
    get:
      tags:
        - cities
      summary: Получить список городов
      description: Поиск и фильтрация списка городов с поддержкой пагинации
      operationId: getCities
      parameters:
        #сортировка
        - name: sort
          in: query
          description: Сортировка элемнтов массива
          required: false
          explode: true
          schema:
            type: array
            items: 
              type: string
              default: id
              enum: 
                - id
                - name
                - coordinates.x
                - coordinates.y
                - creationDate
                - area
                - population
                - metersAboveSeaLevel
                - carCode
                - climate
                - standardOfLiving
                - governor.name
                - governor.age
                - governor.height
                - governor.birthday
        - in: query
          name: sortOrder
          schema:
            type: string
            enum: [asc, desc]
            default: asc
          description: Порядок сортировки.
        # пагинация
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Номер страницы
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: Размер страницы
        
        # фильтрация
        - name: filter
          in: query
          required: false
          description: |
            Параметры фильтрации в формате field[operator]=value.
            Доступные операторы: eq, ne, gt, lt, gte, lte, like, in, notin.
            Примеры: name[eq]=Moscow, area[gt]=100, climate[in]=OCEANIC,STEPPE
          style: deepObject
          explode: true
          schema:
            type: object
            additionalProperties:
              type: string
            example:
              name[eq]: "Moscow"
              area[gt]: "100"
              climate[in]: "OCEANIC,STEPPE"
              coordinates.x[gt]: "-100"
              governor.age[lt]: "50"

      responses: 
        '200': 
          description: Успешный ответ
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/CityArray'
        '400':
          description: Неверные входные данные
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Внутренняя ошибка сервера
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        default: 
          description: возвращает код ошибки
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
  # получение элемента по id
  /cities/{id}:
    get:
      tags:
        - cities
      summary: Получить город по id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
          description: ID города
      responses:
        '200':
          description: Успешный ответ
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/City'
        '400':
          description: Неверный ID
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Город с указанным ID не найден
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
    # обновление элемента
    put:
      tags:
        - cities
      summary: Обновить город по идентификатору
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
          description: ID обновляемого города
        - in: query
          name: name
          schema:
            type: string
          description: Новое название города
        - in: query
          name: coordinates.x
          schema:
            type: number
            format: double
            minimum: -190
            exclusiveMinimum: true
          description: Новая координата X
        - in: query
          name: coordinates.y
          schema:
            type: number
            format: double
          description: Новая координата Y
        - in: query
          name: area
          schema:
            type: integer
            minimum: 1
          description: Новая площадь
        - in: query
          name: population
          schema:
            type: integer
            minimum: 1
          description: Новое население
        - in: query
          name: metersAboveSeaLevel
          schema:
            type: number
            format: double
          description: Новая высота над уровнем моря
        - in: query
          name: carCode
          schema:
            type: integer
            format: int64
            minimum: 1
            maximum: 1000
          description: Новый код автомобиля
        - in: query
          name: climate
          schema:
            type: string
            enum: [OCEANIC, STEPPE, SUBARCTIC, DESERT]
          description: Новый климат
        - in: query
          name: standardOfLiving
          schema:
            type: string
            enum: [ULTRA_HIGH, MEDIUM, VERY_LOW]
          description: Новый уровень жизни
        - in: query
          name: governor.name
          schema:
            type: string
          description: Новое имя губернатора
        - in: query
          name: governor.age
          schema:
            type: integer
            format: int64
            minimum: 1
          description: Новый возраст губернатора
        - in: query
          name: governor.height
          schema:
            type: number
            format: double
            minimum: 0
            exclusiveMinimum: true
          description: Новый рост губернатора
        - in: query
          name: governor.birthday
          schema:
            type: string
            format: date
          description: Новый день рождения губернатора
      responses:
        '200':
          description: Город успешно обновлен
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/City'
        '400':
          description: Ошибка валидации данных
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Город не найден
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
    # удаление элемента
 
    delete:
      tags:
        - cities
      summary: Удалить город по id
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
            minimum: 1
          description: id удаляемого города
      responses:
        '204':
          description: Город удален
        '404':
          description: Город не найден
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
        '400':
          description: Неверный ID
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'

  # Удалить все объекты, значение поля metersAboveSeaLevel которого эквивалентно заданному.
  /cities/utils/delete-by-sea-level:
    delete:
      tags:
        - utils
      summary: Удалить города по высоте над уровнем моря
      parameters:
        - in: query
          name: metersAboveSeaLevel
          required: true
          schema:
            type: number
            format: double
          description: Значение высоты над уровнем моря для удаления
      responses:
        '200':
          description: Успешное выполнение операции
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: DeleteResult
                properties:
                  deletedCount:
                    type: integer
                    description: Количество удаленных городов
        '400':
          description: Неверный параметр
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
  # Рассчитать среднее значение поля carCode для всех объектов.
  /cities/utils/average-car-code:
    get:
      tags:
        - utils
      summary: Получить среднее значение кода автомобиля
      responses:
        '200':
          description: Успешное выполнение операции
          content:
            application/xml:
              schema:
                type: object
                xml:
                  name: AverageResult
                properties:
                  average:
                    type: number
                    format: double
                    description: Среднее значение поля carCode
        '404':
          description: Коллекция пуста
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'

  # Вернуть один (любой) объект, значение поля name которого является минимальным
  /cities/utils/min-name:
    get:
      tags:
        - utils
      summary: Получить город с минимальным названием
      responses:
        '200':
          description: Успешное выполнение операции
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/City'
        '404':
          description: Коллекция пуста
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Error'
          
components:
  schemas:
    CityArray:
      type: array
      xml:
        name: Cities
        wrapped: true
      items:
        $ref: '#/components/schemas/City'
        
    City:
      type: object
      xml:
        name: City
      required:
        - id
        - name
        - coordinates
        - creationDate
        - area
        - population
        - carCode
        - climate
        - governor
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          minimum: 1
          description: uid
        name:
          type: string
          minLength: 1
          description: Название города
        coordinates:
          $ref: '#/components/schemas/Coordinates'
        creationDate:
          type: string
          format: date-time
          readOnly: true
          description: Дата создания (генерируется автоматически)
        area:
          type: integer
          minimum: 1
          description: Площадь города (> 0)
        population:
          type: integer
          minimum: 1
          description: Население города (> 0)
        metersAboveSeaLevel:
          type: number
          format: double
          nullable: true
          description: Высота над уровнем моря
        carCode:
          type: integer
          format: int64
          minimum: 1
          maximum: 1000
          description: Код автомобиля (1-1000)
        climate:
          type: string
          enum: [OCEANIC, STEPPE, SUBARCTIC, DESERT]
          description: Климат
        standardOfLiving:
          type: string
          enum: [ULTRA_HIGH, MEDIUM, VERY_LOW]
          nullable: true
          description: Уровень жизни
        governor:
          $ref: '#/components/schemas/Human'
  
    Coordinates:
      type: object
      xml:
        name: Coordinates
      required:
        - x
        - y
      properties:
        x:
          type: number
          format: double
          minimum: -190
          exclusiveMinimum: true
          description: Координата X (> -190)
        y:
          type: number
          format: double
          description: Координата Y
  
    Human:
      type: object
      xml:
        name: Human
      required:
        - name
      properties:
        name:
          type: string
          minLength: 1
          description: Имя человека
        age:
          type: integer
          format: int64
          minimum: 1
          nullable: true
          description: Возраст человека (> 0)
        height:
          type: number
          format: double
          minimum: 0
          exclusiveMinimum: true
          nullable: true
          description: Рост человека (> 0)
        birthday:
          type: string
          format: date
          nullable: true
          description: День рождения человека
  
    Error:
      type: object
      xml:
        name: Error
      properties:
        code:
          type: integer
          format: int32
          description: Код ошибки
        message:
          type: string
          description: Сообщение об ошибке
        timestamp:
          type: string
          format: date-time
          description: Время возникновения ошибки          
          